/*
**      ad -- ASCII dump
**      formats/jpeg.ad
**
**      Copyright (C) 2025  Paul J. Lucas
**
**      This program is free software: you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation, either version 3 of the License, or
**      (at your option) any later version.
**
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
**
**      You should have received a copy of the GNU General Public License
**      along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

struct APP0 {
  enum units_t : uint<8> {
    NONE      = 0,
    DOTS_INCH = 1,
    DOTS_CM   = 2
  };

  uint<16,b>  marker if $ == 0xFFE0;
  uint<16,b>  size                      "%u";
  utf<8>      jfif[] if $ == "JFIF";
  uint<8>     major;
  uint<8>     minor;
  units_t     units;

  switch ( units ) {
    case NONE:
      uint<8> thumbnail_x;
      uint<8> thumbnail_y;
      break;
    case DOTS_INCH:
      uint<8> x_in;
      uint<8> y_in;
      break;
    case DOTS_CM:
      uint<8> x_cm;
      uint<8> y_cm;
      break;
    default:
      WARN( "\"%u\": invalid units\n", units );
      units = NONE;
  } // switch

  uint<8> thumbnail[ size ];
};

struct COM {
};

struct DHT {
};

struct SOF {
};

struct SOI {
  uint<16,b> marker if $ == 0xFFD8;
};

struct RGB {
  uint<8> r;
  uint<8> g;
  uint<8> b;
};

struct extension_APP0 {
  enum THUMB_FORMAT : uint<8> {
    THUMB_JPEG  = 0x10,
    THUMB_1BPP  = 0x11,
    THUMB_3BPP  = 0x13
  };

  uint<16,b>  marker if $ == 0xFFE0;
  uint<16,b>  size                      "%u";
  utf<8>      jfxx[] if $ == "JFXX";
  THUMB_FORMAT thumb_fmt;

    switch ( thumb_fmt ) {
      case THUMB_JPEG:
        SOI soi;
        SOF sof[+];
        EOI eoi;
        break;
      case THUMB_1BPP:
        uint<8> x_thumb;
        uint<8> y_thumb;
        RGB     palette[ 256 ];
        uint<8> pixel[ x_thumb * y_thumb ];
        break;
      case THUMB_3BPP:
        break;
    }
};

struct SOS {
  uint<16,b> marker if $ == 0xFFDA;
};

struct EOI {
  uint<16,b> marker if $ == 0xFFD9;
};

union BODY {
  COM;
  DHT;
  SOF;
};

///////////////////////////////////////////////////////////////////////////////

SOI                 soi;
APP0                app0;
extension_APP0[?]   ext_app0;
BODY                body[*];
SOS                 sos;
EOI                 eoi;

/* vim:set syntax=c et sw=2 ts=2: */
